{"version":3,"sources":["constants.js","Landing.js","NavBar.js","utils.js","Dashboard.js","App.js","registerServiceWorker.js","index.js"],"names":["appConfig","AppConfig","Landing","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","userSession","UserSession","e","preventDefault","redirectToSignIn","react_default","a","createElement","className","href","target","onClick","signIn","bind","Component","NavBar","username","props","Link","to","signOut","jsonCopy","object","JSON","parse","stringify","Dashboard","state","tasks","value","loadTasks","assertThisInitialized","handleChange","addTask","removeTask","checkTask","nextProps","nextTasks","length","setState","_this2","getFile","decrypt","then","content","putFile","encrypt","finally","window","location","search","history","pushState","split","event","index","splice","remove","dataset","saveTasks","task","push","add","check","signUserOut","_this3","loadUserData","src_NavBar_0","class","id","style","borderColor","onSubmit","type","onChange","required","placeholder","autoFocus","map","i","key","data-index","checked","defaultProps","App","session","isUserSignedIn","isSignInPending","handlePendingSignIn","userData","Error","role","src_Dashboard_0","src_Landing_0","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","console","log","catch","error","ReactDOM","render","BrowserRouter","src_App_0","document","getElementById","URL","process","origin","addEventListener","concat","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.95266007.chunk.js","sourcesContent":["import { AppConfig } from 'blockstack'\n\nexport const appConfig = new AppConfig(['store_write', 'publish_data'])\n\nexport const TASKS_FILENAME = 'tasks.json'\n\nexport const EXPLORER_URL = 'https://explorer.blockstack.org'\n","import React, { Component } from 'react'\nimport { UserSession } from 'blockstack'\nimport { appConfig } from './constants'\nimport './Landing.css'\n\nclass Landing extends Component {\n\n  constructor() {\n    super()\n    this.userSession = new UserSession({ appConfig })\n  }\n\n  signIn(e) {\n    e.preventDefault()\n    this.userSession.redirectToSignIn()\n  }\n\n  render() {\n    return (\n      <div className=\"Landing\">\n        <div className=\"form-signin\">\n          <h1 className=\"h1 mb-3 font-weight-normal\">To-do List</h1>\n          <p>A decentralized Todo app built on <a href=\"https://blockstack.org\" target=\"_blank\">Blockstack</a></p>\n          <button\n            className=\"btn btn-lg btn-primary btn-block\"\n            onClick={this.signIn.bind(this)}>Sign in with Blockstack\n          </button>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default Landing\n","import React, { Component } from 'react'\nimport { Link } from 'react-router-dom'\nimport './NavBar.css'\n\nclass NavBar extends Component {\n\n  render() {\n    const username = this.props.username\n    return (\n<nav className=\"navbar navbar-expand-md navbar-dark bg-blue fixed-top\">\n<Link className=\"navbar-brand\" to=\"/\">Blockstack To-do List</Link>\n\n\n<ul className=\"navbar-nav mr-auto\">\n  <li className=\"nav-item\">\n    <Link className=\"nav-link\" to='/'>{username}</Link>\n  </li>\n</ul>\n<button\n  className=\"btn btn-primary\"\n  onClick={this.props.signOut.bind(this)}\n>Sign out\n</button>\n</nav>\n)\n}\n}\n\nexport default NavBar\n","// These functions have been extracted out of Dashboard.js since\n// they are the logical functions being tested. \n\nexport function jsonCopy(object) {\n  return JSON.parse(JSON.stringify(object))\n}\n\n// All three functions take in a state and return a list object of tasks\nexport function remove(index, state) {\n  const tasks = jsonCopy(state.tasks)\n  tasks.splice(index, 1) // remove subject at index\n  return tasks\n}\n\nexport function add(state) {\n  const task = state.value\n  const tasks = jsonCopy(state.tasks)\n  tasks.push([task, false])\n  return tasks\n}\n\nexport function check(index, state) {\n  const tasks = jsonCopy(state.tasks)\n  tasks[index][1] = !tasks[index][1]\n  return tasks\n}\n\n\n\n","import React, { Component } from 'react'\nimport { UserSession } from 'blockstack'\nimport NavBar from './NavBar'\nimport {jsonCopy, remove, add, check} from './utils'\nimport { appConfig, TASKS_FILENAME } from './constants'\nimport './Dashboard.css'\n\n\nclass Dashboard extends Component {\n\n  constructor(props) {\n    super(props)\n    //this.userSession = new UserSession({ appConfig })\n    this.state = {\n      tasks: [],\n      value: '',\n\n    }\n\n    this.loadTasks = this.loadTasks.bind(this)\n    this.signOut = this.signOut.bind(this)\n    this.handleChange = this.handleChange.bind(this)\n    this.addTask = this.addTask.bind(this)\n    this.removeTask = this.removeTask.bind(this)\n    this.checkTask = this.checkTask.bind(this)\n  }\n\n  componentWillMount() {\n    this.loadTasks()\n  }\n\n  componentWillReceiveProps(nextProps) {\n    const nextTasks = nextProps.tasks\n    if(nextTasks) {\n      if (nextTasks.length !== this.state.tasks.length) {\n        this.setState({ tasks: jsonCopy(nextTasks) })\n      }\n    }\n  }\n\n  loadTasks() {\n    const options = { decrypt: false }\n    this.props.userSession.getFile(TASKS_FILENAME, options)\n    .then((content) => {\n      if(content) {\n        const tasks = JSON.parse(content)\n        this.setState({tasks})\n      } \n    })\n  }\n\n  saveTasks(tasks) {\n    const options = { encrypt: false }\n    this.props.userSession.putFile(TASKS_FILENAME, JSON.stringify(tasks), options)\n    .finally(() => {\n      if(window.location.search) {\n        window.history.pushState(null, \"\", window.location.href.split(\"?\")[0])\n      }\n    })\n  }\n\n  handleChange(event) {\n    this.setState({value: event.target.value});\n   }\n\n  removeTask(e) {\n    e.preventDefault()\n    const tasks = remove(e.target.dataset.index, this.state)\n    this.setState({ tasks })\n    this.saveTasks(tasks)\n  }\n\n  addTask(e) {\n    e.preventDefault()\n    const tasks = add(this.state)\n    this.setState({value: '', tasks})\n    this.saveTasks(tasks)\n  }\n\n  checkTask(e) {\n    const tasks = check(e.target.dataset.index, this.state)\n    this.setState({ tasks })\n    this.saveTasks(tasks)\n  }\n\n  signOut(e) {\n    e.preventDefault()\n    this.props.userSession.signUserOut()\n    window.location = '/'\n  }\n\n  render() {\n    const username = this.props.userSession.loadUserData().username\n    return (\n      <div className=\"Dashboard\">\n      <NavBar username={username} signOut={this.signOut}/>\n        <div class=\"row justify-content-md-center\">\n          <h1 class=\"user-info\">\n            <small>\n              {username}'s to-dos\n            </small>\n          </h1>\n        </div>\n        <br></br>\n        <div className=\"row justify-content-center\">\n          <div\n            id=\"addTask\"\n            className=\"add-frame col-lg-6\"\n            style={{borderColor: '#f8f9fa'}}\n          >\n            <form onSubmit={this.addTask} className=\"input-group\">\n              <input\n                className=\"form-control\"\n                type=\"text\"\n                onChange={this.handleChange}\n                value={this.state.value}\n                required\n                placeholder=\"Write a to-do...\"\n                autoFocus={true}\n              />\n              <div className=\"input-group-append\">\n                <input type=\"submit\" className=\"btn btn-primary\" value=\"Add task\"/>\n              </div>\n            </form>\n          </div>\n        </div>\n        <br></br>\n        <div className=\"row justify-content-center\">\n          <div>\n            {this.state.tasks.map((task, i) =>\n              <ul key={i}>\n                <div className=\"row\">\n                  <input type=\"checkbox\" className=\"form-check-input\" data-index={i} onClick={this.checkTask} checked={task[1]? true : false}></input>\n                  <div className=\"col\">\n                  <span className=\"input-group-text\">\n                    {task[1]? <s>{task[0]}</s> : task[0]}\n                  </span>\n                  </div>\n                  <button className=\"btn btn-primary\" data-index={i} onClick={this.removeTask}>X</button>\n                </div>\n              </ul>\n            )}\n          </div>\n        </div>\n      </div> \n  \n    );\n  }\n}\n\n// Made this a default prop (instead of using this.userSession) so a dummy userSession\n// can be passed in for testing purposes\nDashboard.defaultProps = {\n  userSession: new UserSession(appConfig)\n};\n\nexport default Dashboard","import React, { Component } from 'react'\nimport './App.css'\nimport { UserSession } from 'blockstack'\nimport Landing from './Landing'\nimport Dashboard from './Dashboard'\n\nclass App extends Component {\n\n  constructor() {\n    super()\n    this.userSession = new UserSession()\n  }\n\n  componentWillMount() {\n    const session = this.userSession\n    if(!session.isUserSignedIn() && session.isSignInPending()) {\n      session.handlePendingSignIn()\n      .then((userData) => {\n        if(!userData.username) {\n          throw new Error('This app requires a username.')\n        }\n        window.location = `/`\n      })\n    }\n  }\n\n  render() {\n    return (\n      <main role=\"main\">\n          {this.userSession.isUserSignedIn() ?\n            <Dashboard />\n          :\n            <Landing />\n          }\n      </main>\n    );\n  }\n}\n\nexport default App\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport { BrowserRouter } from 'react-router-dom'\nimport './index.css'\nimport App from './App'\nimport registerServiceWorker from './registerServiceWorker'\nimport 'bootstrap/dist/css/bootstrap.css'\n\nReactDOM.render(<BrowserRouter><App /></BrowserRouter>, document.getElementById('app'))\nregisterServiceWorker()\n"],"sourceRoot":""}